@page "/transaction"
@using BankingApp.Client.Models
@using BankingApp.Client.Services
@inject BankingService BankingService

<h3>Make a Transaction</h3>

<EditForm Model="@request" OnValidSubmit="HandleDeposit">
    <InputNumber @bind-Value="request.AccountId" class="form-control" placeholder="Account ID" />
    <InputNumber @bind-Value="request.Amount" class="form-control" placeholder="Amount" />
    <button type="submit" class="btn btn-success mt-2">Deposit</button>
</EditForm>

<EditForm Model="@request" OnValidSubmit="HandleWithdraw" class="mt-3">
    <InputNumber @bind-Value="request.AccountId" class="form-control" placeholder="Account ID" />
    <InputNumber @bind-Value="request.Amount" class="form-control" placeholder="Amount" />
    <button type="submit" class="btn btn-warning mt-2">Withdraw</button>
</EditForm>

@if (response != null)
{
    <div class="alert alert-info mt-3">
        <p>@response.Message</p>
        <p>New Balance: Â£@response.NewBalance</p>
    </div>
}

@code {
    private TransactionRequest request = new();
    private TransactionResponse? response;

    private async Task HandleDeposit()
    {
        response = await BankingService.Deposit(request);
    }

    private async Task HandleWithdraw()
    {
        response = await BankingService.Withdraw(request);
    }
}
